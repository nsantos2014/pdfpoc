package pdf;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.pdfbox.multipdf.Splitter;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.common.PDMetadata;
import org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException;

public class SplitPdf {

	public void split() throws InvalidPasswordException, IOException {
		try (PDDocument document = PDDocument
				.load(new File("/Users/gabagustin/eclipse-workspace/pdf/pdf/helloworld.pdf"))) {

			List<Integer> coverPages = new ArrayList<>();
			int i = 1;
			for (PDPage page : document.getPages()) {
				PDMetadata metadata = page.getMetadata();
				if (metadata != null) {
					System.out.println("We have metadata : " + i + " : " + metadata);
					coverPages.add(i);
				}
				i++;
			}
			if (coverPages.isEmpty()) {
				return;

			}
			Splitter splitter = new Splitter();

			int totalPages = 4;
			int startPage = 1;
			int endPage = totalPages; // will change

			for (int pageNum = startPage; pageNum < totalPages; pageNum++) {

				if (coverPages.size() > 1) {
					splitter.setEndPage(endPage = pageNum);
					splitter.setStartPage(startPage = (pageNum + 1));
					splitter.setSplitAtPage(startPage - endPage + 1);
				}
			}
			List<PDDocument> splits = splitter.split(document);
			Iterator<PDDocument> iterator = splits.listIterator();

			int k = 1;
			while (iterator.hasNext()) {
				File f = new File("/Users/gabagustin/eclipse-workspace/pdf/pdf/split_" + k + ".pdf");

				PDDocument pd = iterator.next();
				pd.save(f);
				k++;
			}
		}
	}
}
