package pdf;

import java.io.File;
import java.io.IOException;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.apache.pdfbox.pdmodel.PageMode;
import org.apache.pdfbox.pdmodel.encryption.AccessPermission;
import org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException;
import org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy;
import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination;
import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination;
import org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline;
import org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem;

public class CreatePdf {

	public void create(String save, String message) {

		try (final PDDocument doc = new PDDocument()) {

			PDPage page = new PDPage();
			doc.addPage(page);

			PDPageContentStream content = new PDPageContentStream(doc, page);

			content.beginText();
			content.setFont(PDType1Font.HELVETICA, 12);
			content.newLineAtOffset(100, 700);
			content.showText(message);
			content.endText();
			content.close();

			addBookmarks(doc);
			encryptingPDF(doc);

			doc.save(new File(save));

		} catch (IOException e) {
			System.err.println("Exception while trying to create pdf document - " + e);
		}
	}

	public void addBookmarks(PDDocument document) {

		PDDocumentOutline documentOutline = new PDDocumentOutline();
		document.getDocumentCatalog().setDocumentOutline(documentOutline);
		PDOutlineItem pagesOutline = new PDOutlineItem();
		pagesOutline.setTitle("All Pages");
		documentOutline.addLast(pagesOutline);

		for (int i = 0; i < document.getNumberOfPages(); i++) {
			PDPageDestination pageDestination = new PDPageFitWidthDestination();
			pageDestination.setPage(document.getPage(i));

			PDOutlineItem bookmark = new PDOutlineItem();
			bookmark.setDestination(pageDestination);
			bookmark.setTitle("Document Page " + (i + 1));
			pagesOutline.addLast(bookmark);
		}

		pagesOutline.openNode();
		documentOutline.openNode();

		document.getDocumentCatalog().setPageMode(PageMode.USE_OUTLINES);

	}
	
//	public void encryptingPDF(PDDocument document) throws InvalidPasswordException, IOException {
//
//		AccessPermission ap = new AccessPermission();
//
//		StandardProtectionPolicy spp = new StandardProtectionPolicy("", "", ap);
//
//		spp.setEncryptionKeyLength(128);
//
//		spp.setPermissions(ap);
//
//		document.protect(spp);
//
//		System.out.println("Document encrypted");
//
//	}
}


