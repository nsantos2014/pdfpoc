package com.example.pdfpoc;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.pdfbox.multipdf.Splitter;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.common.PDMetadata;
import org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException;

public class SplitPdf {

	public void split() throws InvalidPasswordException, IOException {
		try (PDDocument document = PDDocument
				.load(new File("/Users/gabagustin/eclipse-workspace/pdf/pdf/helloworld.pdf"))) {

			List<Integer> coverPages = new ArrayList<>();
			int i = 1;
			for (PDPage page : document.getPages()) {
				PDMetadata metadata = page.getMetadata();
				if (metadata != null) {
					System.out.println("Coverpage: " + i + ": " + metadata);
					coverPages.add(i);
				}
				i++;
			}
			if (coverPages.isEmpty()) {
				return;
			}
			Splitter splitter = new Splitter();

			if (coverPages.size() > 1) {
				int start = coverPages.size();
				int end = coverPages.get(coverPages.size() - 1) + 1;

				splitter.setSplitAtPage(start);
				splitter.setStartPage(start - 1);
				for (int j = 1; j < coverPages.size(); j++) {
					splitter.setSplitAtPage(coverPages.get(j));
					splitter.setEndPage(end);
					start = j + 1;
				}
			}
			List<PDDocument> splits = splitter.split(document);
			Iterator<PDDocument> iterator = splits.listIterator();
			
			int k = 1;
			while(iterator.hasNext()) {
				File f = new File("/Users/gabagustin/eclipse-workspace/pdf/pdf/split_" + k + ".pdf");
				
				PDDocument pd = iterator.next();
				pd.save(f);
				k++;
			}
		}
	}
}